//from project 006-thunk by Stephen Grider in Udemy:

//in redux, to load data from an external API we need to use Redux-Promise or Redux-Thunk with axios

//Axios makes the AJAX call
//Redux-Promise and Redux-Thunk are middleware modules that allow us to manage the promises generated by the axios calls


//In index.js:
//alternativa: import ReduxPromise from 'redux-promise';

// import thunk from 'redux-thunk';
// const createStoreWithMiddleware = applyMiddleware(thunk)(createStore);


//In actions/actions.js
import axios from 'axios';
const API_KEY = 'b68279dd9e3ec9121ef0576990607535';
const ROOT_URL = `http://api.openweathermap.org/data/2.5/forecast?APPID=${API_KEY}`;
export const FETCH_WEATHER = 'FETCH_WEATHER';
export function fetchWeather(city) {
    const url = `${ROOT_URL}&q=${city},us`;
    const request = axios.get(url);
    //redux-thunk allows us to return a function instead of an object in an action
    //using redux-thunk vs redux-promise: http://stackoverflow.com/questions/36967721/what-are-the-differences-between-redux-thunk-and-redux-promise-when-used-with-ax
    return (dispatch) => {
      request.then( (response) => {
        dispatch({ type: FETCH_WEATHER, payload: response })
      });
    };


//alternativa con promises:
    /*return {
      type: FETCH_WEATHER,
      payload: request
    };*/

}



//Very good explanation here:
//http://stackoverflow.com/questions/36967721/what-are-the-differences-between-redux-thunk-and-redux-promise-when-used-with-ax
